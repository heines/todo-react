{"version":3,"sources":["components/Clock.js","actions/index.js","components/AddTodo.js","components/Todo.js","components/TodoList.js","components/Link.js","components/Footer.js","components/App.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/index.js","index.js"],"names":["MovementHours","props","shortDeg","date","getHours","getMinutes","className","style","transform","transformOrigin","MovementMinutes","longDeg","MovementSeconds","secondDeg","getSeconds","Clock","state","Date","this","timerID","setInterval","tick","clearInterval","setState","list","i","push","console","log","React","Component","nextTodoId","VisibilityFilters","connect","input","dispatch","onSubmit","event","preventDefault","text","value","trim","type","id","addTodo","ref","element","Todo","onClick","completed","classNames","getVisibleTodos","todos","filter","t","Error","visibilityFilter","toggleTodo","map","todo","key","ownProps","active","children","disabled","marginLeft","Footer","App","action","combineReducers","store","createStore","rootReducer","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0c42257.chunk.js","sourcesContent":["import './Clock.scss';\nimport React from 'react';\n\nfunction MovementHours(props) {\n  let shortDeg = props.date.getHours() > 12 ? ((props.date.getHours() - 12) * 30) : (props.date.getHours() * 30);\n  shortDeg += props.date.getMinutes() * 0.5;\n  return (\n    <div>\n      <div\n        className=\"Clock__hourhand\"\n        style={{ transform: `rotate(${shortDeg}deg)`, transformOrigin: 'center bottom' }}\n      ></div>\n      <div className=\"Clock__hour-center\"></div>\n    </div>\n  );\n}\n\nfunction MovementMinutes(props) {\n  let longDeg = props.date.getMinutes() * 6;\n  return (\n    <div>\n      <div\n        className=\"Clock__minutehand\"\n        style={{ transform: `rotate(${longDeg}deg)`, transformOrigin: 'center bottom' }}\n      ></div>\n      <div className=\"Clock__minutehand-center\"></div>\n    </div>\n  );\n}\n\nfunction MovementSeconds(props) {\n  let secondDeg = props.date.getSeconds() * 6;\n  return (\n    <div>\n      <div\n        className=\"Clock__secondhand\"\n        style={{ transform: `rotate(${secondDeg}deg)`, transformOrigin: 'center 13vw' }}\n      ></div>\n      <div className=\"Clock__secondhand-center\"></div>\n    </div>\n  )\n}\n\n\nexport default class Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date()\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  render() {\n    let list = [];\n    for(var i=1; i<13; i++) {\n      list.push(<div className={`Clock__${i}`}>{i}</div>);\n    }\n    console.log(list);\n    return (\n      <div className=\"Clock\">\n        {list}\n        <MovementHours date={this.state.date} />\n        <MovementMinutes date={this.state.date} />\n        <MovementSeconds date={this.state.date} />\n      </div>\n    );\n  }\n};\n","export const ADD_TODO = 'ADD_TODO';\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER';\n\nlet nextTodoId = 0;\n// // アロー関数において、object リテラル式を返す場合は、本体を丸括弧 () で囲みます:\nexport const addTodo = (text) => ({\n  type: ADD_TODO,\n  id: nextTodoId++,\n  text: text // 同じ場合は略記法としてtextのみにできる\n});\n\nexport const toggleTodo = (id) => ({\n  type: TOGGLE_TODO,\n  id: id\n});\n\nexport const setVisibilityFilter = (filter) => ({\n  type: SET_VISIBILITY_FILTER,\n  filter: filter\n});\n\nexport const VisibilityFilters = {\n  SHOW_ALL: \"SHOW_ALL\",\n  SHOW_COMPLETED: \"SHOW_COMPLETED\",\n  SHOW_ACTIVE: \"SHOW_ACTIVE\"\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addTodo } from '../actions';\n\nconst AddTodo = ({ dispatch }) => {\n  let input;\n  return (\n    <div>\n      <form onSubmit={\n        (event) => {\n          // React では false を返してもデフォルトの動作を抑止することができません。明示的に preventDefault を呼び出す必要があります。\n          // from https://ja.reactjs.org/docs/handling-events.html\n          event.preventDefault();\n          const text = input.value.trim();\n          input.value = '';\n          // テキストなしリストを作らない\n          if(!text){\n            return;\n          }\n          dispatch(addTodo(text)); // (全てのreducerが呼び出される)\n        }\n      }>\n        <input ref={(element) => input = element} />\n        <button type=\"submit\">\n          Add Todo\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default connect()(AddTodo);\n","import React from 'react';\nimport classNames from 'classnames';\n\nconst Todo = ({ onClick, completed, text }) => (\n  <li\n    onClick={onClick}\n    className={classNames(\n        \"todo-item__text\",\n        {\"todo-item__text--completed\" : completed}\n    )}\n  >\n    {completed ? \"👌\" : \"👋\"}{\" \"}\n    <span>\n      {text}\n    </span>\n  </li>\n);\n\nexport default Todo;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Todo from './Todo';\nimport { toggleTodo, VisibilityFilters } from '../actions';\n\nconst TodoList = ({ todos, toggleTodo }) => (\n  <ul className=\"todo-list\">\n    {todos.map((todo) =>\n      <Todo\n        key={todo.id}\n        {...todo}\n        onClick={() => toggleTodo(todo.id)}\n      />\n    )}\n  </ul>\n);\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n      return todos;\n    case VisibilityFilters.SHOW_COMPLETED:\n      return todos.filter(t => t.completed);\n    case VisibilityFilters.SHOW_ACTIVE:\n      return todos.filter(t => !t.completed);\n    default:\n      throw new Error('Unknown filter: ' + filter);\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleTodo: (id) => dispatch(toggleTodo(id))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setVisibilityFilter } from '../actions';\n\nconst Link = ({ active, children, onClick }) => (\n  <button\n    onClick={onClick}\n    disabled={active}\n    style={{\n      marginLeft: '4px',\n    }}\n  >\n    {children}\n  </button>\n);\n\n// state は　reduxで管理している全てのstateを持っている\n// ownPropsはconnectしたcomponent本来のpropsを取得する\nconst mapStateToProps = (state, ownProps) => ({\n\tactive: ownProps.filter === state.visibilityFilter\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n\tonClick: () => dispatch(setVisibilityFilter(ownProps.filter))\n});\n\n// 第一引数はcomponentに渡すpropsを制御する\n// 第二引数はreducerを呼び出して、reduxで管理しているstateを更新する\n// ()内は取得したデータをpropsとして扱いたいcomponentを指定する\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(Link);\n","import React from 'react';\nimport Link from './Link';\nimport { VisibilityFilters } from '../actions';\n\nconst Footer = () => (\n  <div>\n    <span>Show: </span>\n    <Link filter={VisibilityFilters.SHOW_ALL}>\n      All\n    </Link>\n    <Link filter={VisibilityFilters.SHOW_ACTIVE}>\n      Active\n    </Link>\n    <Link filter={VisibilityFilters.SHOW_COMPLETED}>\n      Completed\n    </Link>\n  </div>\n)\n\nexport default Footer;\n","import '../App.scss';\nimport React from 'react';\nimport Clock from './Clock';\nimport Form from './Form';\n\nimport AddTodo from './AddTodo';\nimport TodoList from './TodoList';\nimport Footer from './Footer';\n\nconst App = () => (\n  <div>\n    <Clock />\n    <AddTodo />\n    <TodoList />\n    <Footer />\n  </div>\n)\n\nexport default App;\n\n// http://www.fumiononaka.com/Business/html5/FN1908005.html\n","import { ADD_TODO, TOGGLE_TODO } from '../actions';\n\nconst todos = (state = [], action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text,\n          completed: false\n        }\n      ];\n    case TOGGLE_TODO:\n      return state.map((todo) =>\n        (todo.id === action.id) ? {...todo, completed: !todo.completed} : todo\n      )\n    default:\n      return state;\n  }\n};\n\nexport default todos;\n","import { VisibilityFilters } from '../actions';\n\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return action.filter;\n    default:\n      return state;\n  }\n};\nexport default visibilityFilter;\n","import { combineReducers } from 'redux';\nimport todos from './todos';\nimport visibilityFilter from './visibilityFilter';\n\nexport default combineReducers({\n  todos,\n  visibilityFilter\n});\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './components/App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer);\n\n// Providerの目的は2つ\n// 1 Reactコンポーネント内でreact-reduxのconnect()関数を使えるようにすること\n// 2 ラップしたコンポーネントにstore情報を渡すこと\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}